{
  "openapi": "3.0.1",
  "info": {
    "title": "api.fpki.io",
    "description": "**This is a rest web service that maintains the paths of X.509 CA Certificates within the [U.S. Federal PKI](https://fpki.idmanagement.gov).**\n\nThis documentation is provided via the OpenAPI Specification in [JSON](https://raw.githubusercontent.com/grandamp/api.fpki.io/master/openapi.json) and [YAML](https://raw.githubusercontent.com/grandamp/api.fpki.io/master/openapi.yaml).\n\nThe source code of this API is located in [this GitHub repo](https://github.com/grandamp/api.fpki.io).\n",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.fpki.io/v1"
    },
    {
      "url": "https://api.fpki.io/v1"
    }
  ],
  "paths": {
    "/ca": {
      "get": {
        "operationId": "CAGetAllFunction",
        "summary": "Get all CAs",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/arrayOfEntity"
                }
              }
            }
          },
          "500": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "CACreateEntryFunction",
        "summary": "Create a CA entry",
        "requestBody": {
          "description": "The CA entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/entity"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity"
                }
              }
            }
          },
          "400": {
            "description": "client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/ca/{caSKI}": {
      "get": {
        "operationId": "CAGetBySKIFunction",
        "summary": "Get a specific CA by subjectKeyIdentifier",
        "parameters": [
          {
            "name": "caSKI",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity"
                }
              }
            }
          },
          "400": {
            "description": "client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/caPath": {
      "get": {
        "operationId": "CAPathGetAllFunction",
        "summary": "Get all CAs",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nestedEntity"
                }
              }
            }
          },
          "500": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/caPath/{caSKI}": {
      "get": {
        "operationId": "CAPathGetBySKIFunction",
        "summary": "Get a specific CA by subjectKeyIdentifier",
        "parameters": [
          {
            "name": "caSKI",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nestedEntity"
                }
              }
            }
          },
          "400": {
            "description": "client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/caPathAsPEM": {
      "get": {
        "operationId": "CAPathAsPEMGetAllFunction",
        "summary": "Get all CAs",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/caPathAsPEM/{caSKI}": {
      "get": {
        "operationId": "CAPathAsPEMGetBySKIFunction",
        "summary": "Get a specific CA by subjectKeyIdentifier",
        "parameters": [
          {
            "name": "caSKI",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "entity": {
        "required": [
          "caCert",
          "caCrl"
        ],
        "type": "object",
        "properties": {
          "caAKI": {
            "minLength": 40,
            "maxLength": 40,
            "type": "string",
            "description": "The Hex-String representation of the authorityKeyIdentifier keyIdentifier value"
          },
          "caCert": {
            "maxLength": 8192,
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "description": "A base64 encoded X509 Certificate",
            "format": "byte"
          },
          "caCrl": {
            "minLength": 11,
            "maxLength": 2083,
            "type": "string",
            "description": "The CRL HTTP URL, signed by this CA"
          },
          "caHash": {
            "minLength": 64,
            "maxLength": 64,
            "type": "string",
            "description": "The Hex-String representation of the SHA-256 digest value of the DER encoded certificate"
          },
          "caIssuer": {
            "minLength": 3,
            "maxLength": 2083,
            "type": "string",
            "description": "The RFC 2253 encoding of the certificate's issuer"
          },
          "caNotAfter": {
            "minLength": 10,
            "maxLength": 30,
            "type": "string",
            "description": "The certificate expiry time formatted using ISO8601"
          },
          "caNotBefore": {
            "minLength": 10,
            "maxLength": 30,
            "type": "string",
            "description": "The certificate issuance time formatted using ISO8601"
          },
          "caSerial": {
            "minLength": 2,
            "maxLength": 128,
            "type": "string",
            "description": "The Hex-String representation of the ASN.1 Integer value of the certificate serial number"
          },
          "caSKI": {
            "minLength": 40,
            "maxLength": 40,
            "type": "string",
            "description": "The Hex-String representation of the subjectKeyIdentifier keyIdentifier value"
          },
          "caSubject": {
            "minLength": 3,
            "maxLength": 2083,
            "type": "string",
            "description": "The RFC 2253 encoding of the certificate's subject"
          }
        }
      },
      "arrayOfEntity": {
        "minItems": 0,
        "maxItems": 256,
        "type": "array",
        "description": "An array of entity objects",
        "items": {
          "properties": {
            "schema": {
              "$ref": "#/components/schemas/entity"
            }
          }
        }
      },
      "nestedEntity": {
        "type": "object",
        "properties": {
          "caAKI": {
            "minLength": 40,
            "maxLength": 40,
            "type": "string",
            "description": "The Hex-String representation of the authorityKeyIdentifier keyIdentifier value"
          },
          "caCert": {
            "maxLength": 8192,
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "description": "A base64 encoded X509 Certificate",
            "format": "byte"
          },
          "caCrl": {
            "minLength": 11,
            "maxLength": 2083,
            "type": "string",
            "description": "The CRL HTTP URL, signed by this CA"
          },
          "caHash": {
            "minLength": 64,
            "maxLength": 64,
            "type": "string",
            "description": "The Hex-String representation of the SHA-256 digest value of the DER encoded certificate"
          },
          "caIssuer": {
            "minLength": 3,
            "maxLength": 2083,
            "type": "string",
            "description": "The RFC 2253 encoding of the certificate's issuer"
          },
          "caNotAfter": {
            "minLength": 10,
            "maxLength": 30,
            "type": "string",
            "description": "The certificate expiry time formatted using ISO8601"
          },
          "caNotBefore": {
            "minLength": 10,
            "maxLength": 30,
            "type": "string",
            "description": "The certificate issuance time formatted using ISO8601"
          },
          "caSerial": {
            "minLength": 2,
            "maxLength": 128,
            "type": "string",
            "description": "The Hex-String representation of the ASN.1 Integer value of the certificate serial number"
          },
          "caSKI": {
            "minLength": 40,
            "maxLength": 40,
            "type": "string",
            "description": "The Hex-String representation of the subjectKeyIdentifier keyIdentifier value"
          },
          "caSubject": {
            "minLength": 3,
            "maxLength": 2083,
            "type": "string",
            "description": "The RFC 2253 encoding of the certificate's subject"
          },
          "caSubordinates": {
            "minItems": 0,
            "maxItems": 256,
            "type": "array",
            "description": "An array of nestedEntity objects",
            "items": {
              "properties": {
                "schema": {
                  "$ref": "#/components/schemas/nestedEntity"
                }
              }
            }
          }
        }
      },
      "error": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A brief description of the error"
          }
        }
      }
    }
  }
}
